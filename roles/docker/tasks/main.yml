---
# tasks file for docker
- name: Garante que um container do apache esteja rodando
  docker_container:
    name: "{{item}}"
    image: httpd
    volumes:
      - "/srv/{{item}}:/usr/local/apache2/htdocs/"
  with_items:
    - blue
    - green

- name: Registra o ip do blue
  register: blueip
  shell: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' blue"
  ignore_errors: True

- name: Registra o ip do green
  register: greenip
  shell: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' green"
  ignore_errors: True

- name: Registra o ip do backend atual
  register: backendip
  shell: "cat /etc/nginx/sites-enabled/proxy.conf|awk -F 'http://|;' 'NR==4 { print $2 }'"
  ignore_errors: True

- set_fact:
    ipcontainer: "{{blueip.stdout}}"
  when: backendip.stdout == greenip.stdout or backendip.stdout == ''

- set_fact:
    ipcontainer: "{{greenip.stdout}}"
  when: backendip.stdout == blueip.stdout

- name: Reescreve o proxy.conf
  template:
    src: templates/proxy.conf.j2
    dest: /etc/nginx/sites-enabled/proxy.conf

- name: Recarrega o nginx
  service:
    name: nginx
    state: reloaded
